{"name":"Katpy","tagline":"An unofficial Python API for http://kickass.to/","body":"## Katpy\r\n\r\n[![Code Health](https://landscape.io/github/s4chin/Katpy/master/landscape.svg?style=flat)](https://landscape.io/github/s4chin/Katpy/master)\r\n[![Latest Version](https://pypip.in/version/katpy/badge.svg)](https://pypi.python.org/pypi/katpy/)\r\n[![Downloads](https://pypip.in/download/katpy/badge.svg)](https://pypi.python.org/pypi/katpy/)\r\n\r\nAn unofficial Python API for [KickAssTorrents](http://kickass.to/)\r\n\r\n### Installation\r\n```\r\npip install katpy\r\n```\r\nOr:\r\n(https://pypi.python.org/pypi/katpy/1.0.0)\r\nDownload and un-pack.\r\n```\r\npython setup.py install\r\n```\r\n\r\n### Usage\r\nPerform searches using kat.popular(), kat.search() and kat.recent()\r\nResults returned are iterable and can be accessed individually to\r\nsee individual torrent information.\r\n```python\r\nimport kat\r\n\r\n# Get home page results. ------------------------------------------------\r\n\r\nhome = kat.popular()\r\n\r\n# See information about first result \r\nprint home[0].title # Some torrent title\r\n\r\n# Or print out details of every torrent returned\r\n\r\nfor torrent in home:\r\n  torrent.print_details()\r\n\r\n# By default kat.popular returns 70 results, 10 for each category.\r\n# We can refine our results by using categories.\r\n\r\nhome_games = kat.popular(category=kat.Categories.GAMES)\r\n\r\n# We can see how many results we got\r\nprint len(home) # 70\r\nprint len(home_games) # 10\r\n\r\n\r\n# ----------------------------------------------------------------------\r\n\r\n\r\n# Perform a search -----------------------------------------------------\r\n\r\ns = kat.search(\"the walking dead\")\r\n\r\n# Searches can be categorized and also sorted.\r\ns = kat.search(\"the walking dead\", category=kat.Categories.TV, \r\n                sort=kat.Sorting.SEED, order=kat.Sorting.Order.DESC)\r\n\r\n# They can also span multiple pages\r\nmulti = kat.search(\"the walking dead\", pages=3)\r\n# And we can keep track of the current page\r\nprint multi.current_page # 3\r\n\r\n# We can go to a particular page\r\nmulti.page(7)\r\n\r\n# And to the next page\r\nmulti.next_page()\r\n\r\n\r\n#-----------------------------------------------------------------------\r\n\r\n# Get recently added torrents ------------------------------------------\r\n\r\nr = kat.recent()\r\n\r\n# Recent results can be categorized and sorted like normal searches\r\n# and can also contain multiple pages.\r\n\r\n# Change base url\r\nkat.set_base_url(\"http://kickmirror.com\")\r\n\r\n```\r\n### Sorting and Categories\r\n#### Sort Options\r\n* Sorting.SIZE\r\n* Sorting.AGE\r\n* Sorting.FILES\r\n* Sorging.SEED\r\n* Sorting.LEECH\r\n* Sorting.Order.ASC\r\n* Sorting.Order.DESC\r\n\r\n#### Category Options\r\n* Categories.ALL\r\n* Categories.MOVIES\r\n* Categories.TV\r\n* Categories.ANIME\r\n* Categories.MUSIC\r\n* Categories.BOOKS\r\n* Categories.APPS\r\n* Categories.GAMES\r\n* Categories.XXX\r\n\r\n### Torrent Information Available\r\n* title\r\n* category\r\n* size\r\n* seeders\r\n* leechers\r\n* magnet\r\n* download\r\n* files\r\n* age\r\n* page\r\n* print_details()\r\n\r\n### TODO\r\n* Implement sorting for kat.popular() \r\n* Trying to get a page after the end of the results returns the first page, I want to make it return nothing.\r\n* Create a filter class to group sort & search options.\r\n* Implement sub-categories.\r\n* ~~Add support for searching mirror sites e.g kickmirror.com~~","google":"UA-63816462-1","note":"Don't delete this file! It's used internally to help with page regeneration."}